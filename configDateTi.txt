<div class=" px-4 py-5 md:px-6 lg:px-8 mt-3">
    <div class="grid">

        <div class="col-12 md:col-12 lg:col-12">
            <div class="surface-card shadow-4 p-3 border-round">

                <p-table [value]="limiteTickets" [paginator]="true" [rows]="2" [showCurrentPageReport]="true"
                    currentPageReportTemplate="De {first} à {last} sur {totalRecords} lignes" responsiveLayout="scroll"
                    [rowsPerPageOptions]="[2,4,6,8]" [resizableColumns]="true" styleClass="p-datatable-gridlines">
                    <ng-template pTemplate="caption">
                        <div class="flex align-items-center justify-content-between">

                            <div class="left">
                                <h3>Gestion des exclusions sur les tickets</h3>
                            </div>

                            <span class="right">
                                <button pButton pRipple label="Créer une nouvelle exclusion" icon="pi pi-plus"
                                    class="p-button-info" (click)="openNew()"></button>
                            </span>
                        </div>
                    </ng-template>

                    <ng-template pTemplate="header">
                        <tr>
                            <th colspan="2" class="text-center">Période</th>
                            <th colspan="2" class="text-center">Exclusion</th>
                           
                        </tr>
                        <tr>
                            <th pSortableColumn="dateDebutLimite" class="text-center">Date de debut<p-sortIcon field="dateDebutLimite"></p-sortIcon></th>
                            <th pSortableColumn="dateFinLimite" class="text-center">Date de fin<p-sortIcon field="dateFinLimite"></p-sortIcon></th>
                            <th pSortableColumn="limiteDebut" class="text-center">Interalle<p-sortIcon field="limiteDebut"></p-sortIcon></th>
                            <th></th>
                        </tr>
                        <tr>
							<th>
								<p-columnFilter type="text" field="dateDebutLimite"></p-columnFilter>
							</th>
							<th>
								<p-columnFilter type="text" field="dateFinLimite"></p-columnFilter>
							</th>
							<th>
								<p-columnFilter type="text" field="limiteDebut"></p-columnFilter>
							</th>
                            <th></th>
						</tr>
                    </ng-template>
                    <ng-template pTemplate="body" let-limiteTicket>
                        <tr>
                            <td class="text-right">{{limiteTicket.dateDebutLimite |date:'dd-MM-yyyy'}}</td>
                            <td class="text-right">{{limiteTicket.dateFinLimite |date:'dd-MM-yyyy'}}</td>
                            <td class="text-right">de {{limiteTicket.limiteDebut | nombre | replace: ',':' '}} à {{limiteTicket.limiteFin | nombre | replace: ',':' '}}</td>
                            <td style="flex: 0 0 4rem">
                                <button pButton pRipple type="button" icon="pi pi-trash" pTooltip="Supprimer"
                                    class="p-button-rounded p-button-text"
                                    (click)="retirerLimiteTicket(limiteTicket)"></button>
                            </td>
                        </tr>
                    </ng-template>

                </p-table>

            </div>
        </div>

    </div>
</div>

<!-- Créer une exclusion sur les tickets-->
<p-dialog [(visible)]="limiteTicketDialog" [style]="{width: '550px'}"
    header="Création d'une exclusion sur les tickets" [modal]="true" styleClass="p-fluid">
    <form [formGroup]="limiteTicketForm" (ngSubmit)="enregistrerExclusion()">
        <div class="grid">

            <div class="col-12">
                <span>
                    <h4>Limite de debut d'exclusion</h4>
                    <input type="number" pInputText formControlName="limiteDebut">

                </span>
            </div>
            
            <div class="col-12">
                <span>
                    <h4>Limite de fin d'exclusion</h4>
                    <input type="number" pInputText formControlName="limiteFin">
                </span>
            </div>

            <div class="col-12 md:col-6">
                <span>
                    <h4>Date de debut d'exclusion</h4>
                    <p-calendar appendTo="body" [baseZIndex]="3000" dateFormat="dd-mm-yy" view="date" [showIcon]="true" formControlName="dateDebutLimite">
                    </p-calendar>
                </span>
            </div>

            <div class="col-12 md:col-6">
                <span>
                    <h4>Date de fin d'exclusion</h4>
                    <p-calendar appendTo="body" [baseZIndex]="3000" dateFormat="dd-mm-yy" view="date" [showIcon]="true" formControlName="dateFinLimite">
                    </p-calendar>
                </span>
            </div>

            <div class="col-12 md:col-12">
                <div class="flex justify-content-end mt-3">
                    <p-button type="submit" label="Enregistrer" icon="pi pi-check" styleClass="p-button-sm
                        ">
                    </p-button>
                    <p-button label="Annuler" icon="pi pi-times" styleClass="p-button-sm p-button-danger ml-2"
                        (click)="openNew()">
                    </p-button>
                </div>
            </div>
        </div>
    </form>
</p-dialog>

<p-toast></p-toast>
<p-confirmDialog [style]="{width: '450px'}"></p-confirmDialog>










PipeNombre formation des nombre ex:1 000 000



import {Pipe, PipeTransform} from '@angular/core';
import {CurrencyPipe} from '@angular/common';

@Pipe({
	name: 'nombre'
})
export class NombrePipe implements PipeTransform {

	constructor(
			private currencyPipe: CurrencyPipe
	) {
	}

	/**
	 * Transforme une valeur en prix sous forme de chaine.
	 * @param valeur la valeur
	 * @param nbDecimales le nombre de décimales à afficher (défaut: 2)
	 * @param afficherSymbole (optionnel) true pour afficher le symbol
	 */
	transform(valeur: any, afficherSymbole?: boolean, nbDecimales: number = 0): string {
		let display = '';
		if (afficherSymbole) {
			display = 'symbol';
		}
		return this.currencyPipe.transform(valeur, 'EUR', display, `1.${nbDecimales}-${nbDecimales}`);
	}
}

remplacement

import { Pipe, PipeTransform } from '@angular/core';

@Pipe({
	name: 'replace'
})
export class ReplacePipe implements PipeTransform {

	transform(value: string, regexValue: string, replaceValue: string): any {
		let regex = new RegExp(regexValue, 'g');
		return value.replace(regex, replaceValue);
	}

}

à ajouter dans le module(declarations)

    NombrePipe,
    ReplacePipe,

à ajouter dans le module(providers)
	NombrePipe, 
	CurrencyPipe
